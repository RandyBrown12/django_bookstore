CREATE TABLE IF NOT EXISTS BOOKS(
    BOOK_ID SERIAL PRIMARY KEY,
    TITLE TEXT NOT NULL,
    CATEGORY TEXT NOT NULL,
    LANGUAGE TEXT NOT NULL,
    PAGE_COUNT INT NOT NULL,
    DESCRIPTION TEXT NOT NULL,
    BOOK_COUNT INT NOT NULL,
    PRICE DECIMAL(10, 2) NOT NULL,
    IMAGE BYTEA NOT NULL
);

CREATE TABLE IF NOT EXISTS AUTHORS(
    AUTHOR_ID SERIAL PRIMARY KEY,
    AUTHOR_FIRST_NAME TEXT NOT NULL,
    AUTHOR_LAST_NAME TEXT NOT NULL,
    UNIQUE(AUTHOR_FIRST_NAME, AUTHOR_LAST_NAME)
);

CREATE TABLE IF NOT EXISTS PUBLISHERS(
    PUBLISHER_ID SERIAL PRIMARY KEY,
    PUBLISHER TEXT NOT NULL,
    PUBLISHER_DATE DATE NOT NULL,
    UNIQUE(PUBLISHER_ID, PUBLISHER)
);

CREATE TABLE IF NOT EXISTS BOOK_TO_AUTHOR(
    BOOK_TO_AUTHOR_ID SERIAL PRIMARY KEY,
    BOOK_ID INT NOT NULL REFERENCES BOOKS(BOOK_ID) ON DELETE CASCADE,
    AUTHOR_ID INT NOT NULL REFERENCES AUTHORS(AUTHOR_ID) ON DELETE CASCADE,
    UNIQUE(BOOK_ID, AUTHOR_ID)
);

CREATE TABLE IF NOT EXISTS BOOK_TO_PUBLISHER(
    BOOK_TO_PUBLISHER_ID SERIAL PRIMARY KEY,
    BOOK_ID INT NOT NULL REFERENCES BOOKS(BOOK_ID) ON DELETE CASCADE,
    PUBLISHER_ID INT NOT NULL REFERENCES PUBLISHERS(PUBLISHER_ID) ON DELETE CASCADE,
    UNIQUE(BOOK_ID, PUBLISHER_ID)
);

CREATE TABLE IF NOT EXISTS CUSTOMERS(
    CUSTOMER_ID SERIAL PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100),
    PASSWORD CHAR(36) NOT NULL
);

CREATE TABLE IF NOT EXISTS ORDERS(
    ORDER_ID SERIAL PRIMARY KEY,
    CUSTOMER_ID INT REFERENCES CUSTOMERS(CUSTOMER_ID),
    ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
    AMOUNT_TOTAL DECIMAL(10, 2)
);

CREATE TABLE IF NOT EXISTS ORDER_BOOKS(
    ORDER_BOOKS_ID SERIAL PRIMARY KEY,
    ORDER_ID INT REFERENCES ORDERS(ORDER_ID),
    BOOK_ID INT REFERENCES BOOKS(BOOK_ID),
    QUANTITY INT
);

